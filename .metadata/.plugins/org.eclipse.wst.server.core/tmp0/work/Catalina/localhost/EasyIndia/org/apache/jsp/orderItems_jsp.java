/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.73
 * Generated at: 2017-09-13 20:32:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class orderItems_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <!DOCTYPE script PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html5/loose.dtd\">\r\n");
      out.write("    <html lang=\"en\">\r\n");
      out.write("    <title>Products</title>\r\n");
      out.write("    \r\n");
      out.write("  ");

    if ((session.getAttribute("username") == null) || (session.getAttribute("passwd") == "")) 
    {
    	session.invalidate();
    	response.sendRedirect("login.jsp");
    }

   else
   {
Connection con=null;
PreparedStatement st=null,st2=null,pst2=null;
ResultSet rs=null,rs2=null;
String sql=null,sql2=null,sql3=null;
String oid=request.getParameter("name");
	sql="select modelname,color,type,quantity from orderitems where ordersID=?";
	sql2="update orders set status='delivered' where ordersId=?";
	sql3="select status from orders where ordersId=?";
	//out.println(s);
//try
//{
	 String user=(String)session.getAttribute("user");
	Class.forName("com.mysql.jdbc.Driver");
	con = DriverManager.getConnection("jdbc:mysql://localhost/db","root","xxx");
    st = con.prepareStatement(sql);
    st2= con.prepareStatement(sql3);
    st.setString(1,oid);
    st2.setString(1,oid);
  
    rs = st.executeQuery();
    rs2 = st2.executeQuery();
    
      out.write("<table align=\"center\" cellpadding=\"5\" cellspacing=\"5\" border=\"1\">\r\n");
      out.write("    <tr><th>S/N</th><th>ModelName</th><th>Color</th><th>Type</th><th>Quantity</th></tr>");
 
   int count=1;
    while(rs.next()) {
        //session.setAttribute("username", username);
      
      out.write("\r\n");
      out.write("      <tr>\r\n");
      out.write("      <td>");
out.println(count++);
      out.write("</td>\r\n");
      out.write("      <td>");
out.println(rs.getString(1));
      out.write("</td>\r\n");
      out.write("      <td >");
out.println(rs.getString(2));
      out.write("</td>\r\n");
      out.write("      <td>");
out.println(rs.getString(3));
      out.write("</td>\r\n");
      out.write("      <td >");
out.println(rs.getString(4));
      out.write("</td>\r\n");
      out.write("     </tr>\r\n");
      out.write("      </table>\r\n");
      out.write("      ");
 }
        //out.println("<a href='logout.jsp'>Log out</a>");
        //response.sendRedirect("success.jsp");
       // break;
       //out.println(rs.getString(1)+" "+rs.getString(2));
     
    
    if(user.equalsIgnoreCase("FRANCHISORS"))
	{ 
	 
	 while(rs2.next()){
		// out.println(rs2.getString(1));
		if((rs2.getString(1)).equalsIgnoreCase("not delivered"))
		{
			out.println(rs2.getString(1));
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<button onclick=\"placed(this.id)\" value=\"pl\" id=\"p\" >Send </button>\r\n");
      out.write("\t\r\n");
      out.write(" ");

		}
	 }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("// to get OrderId from the page orders\r\n");
      out.write("window.onload = function () {\r\n");
      out.write("    var url = document.location.href,\r\n");
      out.write("        params = url.split('?')[1].split('&'),\r\n");
      out.write("        data = {}, tmp;\r\n");
      out.write("    for(var i = 0, l = params.length; i < l; i++) {\r\n");
      out.write("         tmp = params[i].split('=');\r\n");
      out.write("         data[tmp[0]] = tmp[1];\r\n");
      out.write("    }\r\n");
      out.write("    document.getElementById('here').innerHTML = data.name;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// To placed the order\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" function placed(id){\r\n");
      out.write("\t var v =document.getElementById(id);\r\n");
      out.write("\t //document.getElementById(\"demo\").innerHTML = \"Hello World\";\r\n");
      out.write("\talert(\"Order Placed !!! \");\r\n");
      out.write("\t");

	 pst2 = con.prepareStatement(sql2);
	    pst2.setString(1,oid);
	    int i = pst2.executeUpdate();
	    con.close();
	    
      out.write(" \r\n");
      out.write("\tif(v.value=='pl')\r\n");
      out.write("\t {\r\n");
      out.write("\t document.getElementById('p').style.visibility= 'hidden';\r\n");
      out.write("\t\r\n");
      out.write("\t }\r\n");
      out.write("\t\r\n");
      out.write("} \r\n");
      out.write("</script>\r\n");
}
    }
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    /* Remove the navbar's default margin-bottom and rounded borders */ \r\n");
      out.write("    .navbar {\r\n");
      out.write("      margin-bottom: 0;\r\n");
      out.write("      border-radius: 0;\r\n");
      out.write("      height:110px;\r\n");
      out.write("    }\r\n");
      out.write("   * {font-family: Helvetica Neue, Arial, sans-serif; }\r\n");
      out.write("\r\n");
      out.write("body { background: url(\"images/bg3.jpg\");}\r\n");
      out.write("\r\n");
      out.write("h1, table { text-align: center; }\r\n");
      out.write("\r\n");
      out.write("table {border-collapse: collapse;  width: 95%; margin: 0 auto .5rem;}\r\n");
      out.write("\r\n");
      out.write("th, td { padding: 1rem; font-size: 1.3rem; }\r\n");
      out.write("\r\n");
      out.write("tr {background: hsl(50, 50%, 80%); }\r\n");
      out.write("\r\n");
      out.write(" td { transition: .4s ease-in;text-align: center; } \r\n");
      out.write("\r\n");
      out.write("tr:first-child {background: hsla(12, 100%, 40%, 0.5); }\r\n");
      out.write("\r\n");
      out.write("tr:nth-child(even) { background: hsla(50, 50%, 80%, 0.7); }\r\n");
      out.write("\r\n");
      out.write("td:empty {background: hsla(50, 25%, 60%, 0.7); }\r\n");
      out.write("\r\n");
      out.write("tr:hover:not(#firstrow), tr:hover td:empty {background: #ff0; pointer-events: visible;}\r\n");
      out.write("tr:hover:not(#firstrow) { transform: scale(1.01); font-weight: 700; box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.5);}\r\n");
      out.write("  .jumbotron {\r\n");
      out.write("      \r\n");
      out.write("      background: url(\"images/FlowerBackground.png\") ;\r\n");
      out.write("      color: #fff;\r\n");
      out.write("      padding: 100px 95px;\r\n");
      out.write("      font-family: Montserrat, sans-serif;\r\n");
      out.write("       width: 100%;\r\n");
      out.write("     height: 150px;\r\n");
      out.write("     }\r\n");
      out.write("     .navbar {\r\n");
      out.write("      margin-bottom: 0;\r\n");
      out.write("      background-color:transparent ;\r\n");
      out.write("      z-index: 9999;\r\n");
      out.write("      border: 0;\r\n");
      out.write("      font-size: 20px !important;\r\n");
      out.write("      line-height: 2 !important;\r\n");
      out.write("      letter-spacing: 3px;\r\n");
      out.write("      border-radius: 0;\r\n");
      out.write("      font-family: arial, serif;\r\n");
      out.write("  }\r\n");
      out.write("     .navbar li a, .navbar .navbar-brand {\r\n");
      out.write("      color: white !important;\r\n");
      out.write("  }\r\n");
      out.write("  .navbar-nav li a:hover, .navbar-nav li.active a {\r\n");
      out.write("      color: pink !important;\r\n");
      out.write("      background-color: green !important;\r\n");
      out.write("  }\r\n");
      out.write("     .navbar-default .navbar-toggle {\r\n");
      out.write("      border-color: transparent;\r\n");
      out.write("      color: #fff !important;\r\n");
      out.write("  }  \r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
